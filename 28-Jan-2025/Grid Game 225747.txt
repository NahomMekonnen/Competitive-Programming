# Problem: Grid Game - https://leetcode.com/problems/grid-game/

class Solution {
public:
    long long gridGame(vector<vector<int>>& grid) {
        int n = grid[0].size();

        vector<long long> row1(n,0);
        vector<long long> row2(n,0);
        row1[0] = grid[0][0];
        row2[0] = grid[1][0];
        for(int i = 1; i < n; i++)
        {   
            row1[i] = grid[0][i] + row1[i-1];
            row2[i] = grid[1][i] + row2[i-1];
        }

        long long maxAns = LLONG_MAX;
        for(int i = 0; i < n; i++ )
        {
            long long top = row1[n-1] - row1[i];
            long long bottom = i > 0 ?  row2[i-1] : 0;
            long long secRob = max(top , bottom);
            maxAns = min(maxAns,secRob);
        }
        return maxAns;
    }
};